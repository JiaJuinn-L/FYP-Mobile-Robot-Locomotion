# 5 x 5Grid
grid = [
    [1, 1, 9, 2, 1],
    [2, 9, 1, 9, 1],
    [2, 2, 1, 2, 2],
    [9, 1, 9, 2, 9],
    [1, 1, 1, 2, 1]
]


# Flipped Grid for a* & Dijkstra
grid = [
    [1, 1, 1, 2, 1],
    [9, 1, 9, 2, 9],
    [2, 2, 1, 2, 2],
    [2, 9, 1, 9, 1],
    [1, 1, 9, 2, 1]
]

start = (0, 0)
goal = (4, 4)

# 10 x 10 Grid
grid = [
    [1, 1, 1, 1, 1, 9, 1, 1, 1, 1],
    [9, 9, 9, 9, 1, 9, 1, 9, 9, 1],
    [1, 1, 1, 9, 1, 9, 1, 1, 9, 1],
    [1, 9, 1, 1, 1, 9, 9, 1, 9, 1],  # ← (3,4) is chokepoint
    [1, 9, 9, 9, 1, 1, 1, 1, 9, 1],
    [1, 1, 1, 9, 9, 9, 9, 1, 1, 1],  # ← (5,7) is optional dynamic obstacle
    [9, 9, 1, 1, 1, 1, 1, 1, 9, 9],
    [1, 1, 1, 9, 9, 9, 9, 1, 1, 1],
    [1, 9, 1, 1, 1, 1, 9, 1, 9, 1],
    [1, 1, 1, 9, 9, 1, 1, 1, 1, 1]
]

# Flipped for a* & Dijkstra
grid = [
    [1,1,1,9,9,1,1,1,1,1],
    [1,9,1,1,1,1,9,1,9,1],
    [1,1,1,9,9,9,9,1,1,1],
    [9,9,1,1,1,1,1,1,9,9],
    [1,1,1,9,9,9,9,1,1,1],
    [1,9,9,9,1,1,1,1,9,1],
    [1,9,1,1,1,9,9,1,9,1],
    [1,1,1,9,1,9,1,1,9,1],
    [9,9,9,9,1,9,1,9,9,1],
    [1,1,1,1,1,9,1,1,1,1]
]

start = (0, 0)
goal = (9, 9)

Insert obstacle at (3,4) during runtime — blocks shortest route

Insert another optional at (5,7) — forces D* Lite to explore deeper

Even after these are blocked, a bottom-loop detour remains open

# 20 x 20
grid = [
    [1, 2, 9, 2, 1, 2, 2, 9, 1, 1, 1, 2, 9, 1, 1, 2, 1, 9, 2, 1],
    [9, 1, 9, 1, 9, 2, 1, 1, 9, 2, 2, 9, 1, 1, 9, 1, 2, 2, 9, 1],
    [9, 2, 2, 2, 1, 2, 1, 9, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 9, 2],
    [9, 9, 9, 2, 9, 2, 9, 1, 9, 9, 2, 9, 9, 2, 9, 2, 9, 2, 1, 2],
    [2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 9, 1, 2, 2, 2, 1, 2, 9],
    [1, 9, 9, 9, 2, 1, 9, 2, 2, 2, 1, 9, 9, 2, 1, 9, 2, 2, 1, 1],
    [2, 1, 1, 1, 9, 2, 1, 1, 9, 2, 2, 2, 9, 1, 9, 2, 9, 9, 2, 1],
    [9, 9, 9, 1, 9, 9, 9, 2, 2, 1, 1, 1, 1, 2, 9, 1, 1, 1, 2, 2],
    [1, 1, 2, 2, 1, 1, 9, 2, 9, 1, 2, 2, 2, 2, 9, 2, 2, 9, 1, 1],
    [9, 9, 9, 9, 9, 1, 2, 2, 9, 1, 9, 9, 1, 2, 1, 2, 9, 2, 2, 1],
    [1, 2, 2, 1, 1, 1, 9, 2, 1, 2, 1, 2, 9, 9, 9, 9, 1, 9, 9, 2],
    [9, 9, 9, 9, 2, 1, 9, 9, 9, 9, 2, 1, 2, 2, 1, 9, 2, 1, 1, 1],
    [1, 1, 1, 1, 9, 2, 2, 2, 2, 2, 9, 9, 9, 9, 2, 9, 9, 2, 9, 2],
    [9, 9, 9, 1, 9, 9, 9, 9, 9, 2, 1, 1, 1, 9, 1, 1, 2, 2, 9, 1],
    [2, 2, 9, 2, 2, 1, 1, 2, 9, 9, 9, 9, 2, 9, 9, 9, 1, 1, 9, 1],
    [2, 9, 9, 9, 9, 9, 9, 1, 1, 1, 1, 9, 2, 2, 2, 2, 9, 2, 9, 1],
    [2, 1, 1, 1, 2, 1, 9, 9, 9, 9, 2, 9, 9, 9, 9, 2, 9, 2, 9, 1],
    [9, 9, 9, 9, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 9, 2, 2, 2, 9, 2],
    [2, 2, 2, 2, 2, 9, 9, 9, 9, 9, 9, 9, 9, 2, 9, 9, 9, 2, 9, 2],
    [1, 9, 9, 9, 9, 9, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 9, 9, 9, 1],
]

# Flipped
grid = [
  [1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1],
  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1],
  [1, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 1],
  [1, 1, 1, 9, 1, 1, 1, 1, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1],
  [9, 9, 1, 9, 1, 9, 9, 9, 9, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1],
  [1, 1, 1, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  [1, 9, 1, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 9, 9, 9],
  [1, 9, 9, 1, 9, 1, 1, 1, 1, 9, 1, 1, 1, 1, 1, 1, 1, 9, 1, 1],
  [1, 1, 1, 1, 9, 1, 9, 9, 1, 9, 1, 9, 9, 9, 9, 9, 1, 9, 1, 9],
  [9, 9, 9, 9, 9, 1, 1, 9, 1, 9, 1, 9, 1, 1, 1, 1, 1, 9, 1, 9],
  [1, 1, 1, 1, 1, 1, 9, 9, 1, 1, 1, 9, 1, 9, 9, 9, 9, 9, 1, 1],
  [1, 9, 9, 9, 9, 1, 1, 1, 9, 9, 9, 9, 1, 9, 1, 1, 1, 1, 1, 1],
  [1, 1, 9, 1, 1, 1, 9, 1, 9, 1, 1, 1, 1, 9, 1, 9, 1, 9, 9, 1],
  [9, 9, 9, 1, 9, 1, 2, 1, 1, 1, 9, 9, 9, 9, 1, 9, 1, 1, 9, 1],
  [1, 1, 1, 1, 9, 1, 2, 9, 9, 1, 1, 1, 1, 1, 1, 9, 1, 9, 9, 1],
  [1, 9, 9, 9, 9, 1, 2, 1, 1, 1, 9, 9, 9, 9, 9, 9, 1, 1, 1, 1],
  [1, 2, 1, 1, 1, 1, 2, 1, 9, 1, 9, 1, 1, 1, 1, 1, 1, 9, 9, 1],
  [1, 2, 2, 9, 9, 9, 2, 1, 9, 1, 9, 1, 9, 1, 9, 9, 1, 9, 9, 1],
  [1, 9, 9, 9, 1, 1, 1, 1, 9, 1, 9, 1, 9, 1, 9, 1, 1, 9, 1, 1],
  [1, 1, 1, 1, 1, 9, 9, 9, 9, 1, 1, 1, 9, 1, 1, 1, 9, 9, 1, 1]
]

start = (0, 0)
goal = (19, 19)
